// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  password String
  fullName  String @unique
  winnings Int
  successRate Int 
  rollDice RollDice[]
  match Match[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

model RollDice { 
  id        Int     @id @default(autoincrement())
  resultOfRoll1 Int
  resultOfRoll2 Int
  gamer    User    @relation(fields: [gamerId], references: [id])
  gamerId  Int
}

//This tables dos not have a relation because we want to keep the data without changes!
model Match { 
  id        Int     @id @default(autoincrement())
  resultOfRoll1 Int
  resultOfRoll2 Int
  gamer    User    @relation(fields: [gamerId], references: [id])
  gamerId  Int
}

//-----------Anunciado: ----------------------
// Aquestes són les regles del joc:

//     Al joc de daus s’hi juga amb dos daus de sis cares

//     En cas que el resultat dels dos daus sigui 7 la partida es guanya. Si no, es perd.
//     Per poder jugar al joc t’has de registrar com a jugador/a amb un nom. 
//     Un jugador/a pot veure un llistat de totes les tirades que ha fet i el seu percentatge d’èxit.

//     Per poder realitzar una tirada, un usuari/ària s’ha de registrar amb un nom no repetit. 
//     Al ser creat, se li assigna un identificador únic i una data de registre.

//     Si l’usuari/ària ho desitja, pot no afegir cap nom i es dirà “ANÒNIM”. Pot haver-hi més d’un jugador/a “ANÒNIM”.

//     Cada jugador/a pot veure un llistat de totes les tirades que ha fet amb el valor de cada dau 
//     i si s’ha guanyat o no la partida. A més, pot saber el percentatge d’èxit de les tirades que ha fet.

//     No es pot eliminar una partida en concret, però sí que es pot eliminar tot el llistat de tirades d'un jugador/a.
//     El software ha de permetre llistar tots els jugadors/es que hi ha al sistema, 
//     el percentatge d’èxit de cada jugador/a i el percentatge d’èxit mitjà de tots els jugadors/es en el sistema.

// POST /players: crea un jugador/a.
// PUT /players/{id}: modifica el nom del jugador/a.
// GET /players: retorna el llistat de tots els jugadors/es del sistema amb el seu percentatge d’èxits.
// POST /games/{id}: un jugador/a específic realitza una tirada.
// DELETE /games/{id}: elimina les tirades del jugador/a.
// GET /games/{id}: retorna el llistat de jugades per un jugador/a.
// GET /ranking: retorna un ranking de jugadors/es ordenat per percentatge d'èxits i el percentatge d’èxits mig del conjunt de tots els jugadors/es.
// GET /ranking/loser: retorna el jugador/a amb pitjor percentatge d’èxit.
// GET /ranking/winner: retorna el jugador/a amb millor percentatge d’èxit.
//---------------------------

// model ReceivedMessageFromUser {
//   id        Int     @id @default(autoincrement())
//   receivedMessage   String?
//   whoSend String
//   msg Msg[]
// }

// model Msg {
//   id        Int     @id @default(autoincrement())
//   sendMessageToUser    SendMessageToUser    @relation(fields: [sendMessageToUserId], references: [id])
//   sendMessageToUserId  Int
//   receivedMessage    ReceivedMessageFromUser    @relation(fields: [receivedMessageId], references: [id])
//   receivedMessageId  Int
//   author    User    @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// createdAt        DateTime           @default(now())
// updatedAt        DateTime           @updatedAt

//npx prisma migrate dev

